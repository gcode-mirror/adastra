% load matlab files generated by MatBuilder.exe program
% 
classdef GazeEEG_LoadMat < handle
	properties  (Constant)
		NoConversion		= 0;
		SingleConversion	= 1;
		DoubleConversion	= 2;
		Int16Conversion     = 3;
	end
	methods(Static)
		function ret = Load(varargin)

            disp('Inside GazeEEG_LoadMat');
              
            convertType     = GazeEEG_LoadMat.NoConversion;
            loadData        = true;
            processNaN      = false;
            
            for k = 1:2:length(varargin)
                if strcmpi(varargin{k},'fileName')
                    fileName = varargin{k+1};
                elseif strcmpi(varargin{k},'loadData')
                    loadData = varargin{k+1};
                elseif strcmpi(varargin{k},'convertType')
                    convertType = varargin{k+1};
                elseif strcmpi(varargin{k},'processNaN')
                    processNaN = varargin{k+1};
                else
                    error('GazeEEG:IncompatibleOption',sprintf('''%s'' is not a valid option, please verify the spelling.',varargin{k}))
                end
            end

            ret = false;
            
            if (exist(fileName, 'file') ~= 2) 
                GazeEEG_LoadMat.throwError( fileName);
                return;
            end
            
            % look for the raw field to NaN processing
			replaceNaN		= false;
			if((processNaN == true) && (convertType ~= GazeEEG_LoadMat.NoConversion))
				replaceNaN	= true;
			end

			% load the mat structure
			Struct			= load(fileName);

            %Anton debug:
            if(isfield(Struct, 'EyetrackerAcq') == true) disp('Detected: EyetrackerAcq'); end;
            if(isfield(Struct, 'EegAcq') == true) disp('Detected: EegAcq'); end;
            
			% is the structure an Eyelink or a Brainamp one ?
			isBrainamp		= false;
%  			if(isfield(Struct, 'Eyelink') == true)
 			if(isfield(Struct, 'EyetrackerAcq') == true)
% 				Struct		= Struct.Eyelink;
				Struct		= Struct.EyetrackerAcq;
% 			elseif(isfield(Struct, 'Brainamp') == true)
			elseif(isfield(Struct, 'EegAcq') == true)
				Struct		= Struct.EegAcq;
% 				Struct		= Struct.Brainamp;
				isBrainamp	= true;
                disp('BrainAmp detected');
            else
                GazeEEG_LoadMat.throwError( isBrainamp, fileName);
				return;
            end
             

			% look for auxiliary dat file
			dataFileName	= [fileName(1:size(fileName, 2) - 3)  'raw'];
            % the .EEG. is not necessarily present in the raw data file
			dataFileNameAlt	= [fileName(1:size(fileName, 2) - 7)  'raw'];
 			haveToRead		= false;
            
            disp(['dataFileName:' dataFileName]);
            disp(['dataFileNameAlt: ' dataFileNameAlt]);
			
            if(isfield(Struct.Data, 'raw') == false)
                disp('No raw field detected');
				haveToRead	= true;
 				if(exist(dataFileName, 'file') ~= 2) && (exist(dataFileNameAlt, 'file') ~= 2)
                    % for brainamp, dat file is an eeg file
					if(isBrainamp == true)
						dataFileName    = [fileName(1:size(fileName, 2) - 3)  'eeg'];
						dataFileNameAlt = [fileName(1:size(fileName, 2) - 7)  'eeg'];
                        
                        disp(['dataFileName:' dataFileName]);
                        disp(['dataFileNameAlt" ' dataFileNameAlt]);
                        
						if(exist(dataFileName, 'file') ~= 2) && (exist(dataFileNameAlt, 'file') ~= 2)
                            
                            GazeEEG_LoadMat.throwError( isBrainamp, fileName);
							return;
                            
                        elseif (exist(dataFileNameAlt, 'file') == 2)
                            dataFileName = dataFileNameAlt;
                        else
                            % TODO : it's already true here !
							haveToRead = true;
                        end
                    % there is no eeg file for eyelink
                    else
                        GazeEEG_LoadMat.throwError( isBrainamp, fileName);
						return;
                    end
                elseif (exist(dataFileNameAlt, 'file') == 2)
                    dataFileName = dataFileNameAlt;
				end	
            end
			
            if(isfield(Struct, 'Brainamp') == true) disp('Detected: Brainamp'); end;
            if(isfield(Struct, 'EegAcq') == true) disp('Detected: EegAcq'); end;
            
            % load the data
            if(loadData)
                if(haveToRead)
                    fid = fopen(dataFileName, 'rb');
%                     if isfield(Struct,'Brainamp'), 
                    if isfield(Struct,'EegAcq'), 
                        PrecStr = '*int16';
                    else
                        switch Struct.Data.Params.binaryFormat 
                            case 0  
                                PrecStr = '*int16';   
                            case 1
                                PrecStr = '*float32';
                            case 2
                                PrecStr = '*float64';
                        end
                    end
                    
                    switch(convertType)
                        % for each conversion type, keep data up to nb of samples
                        case GazeEEG_LoadMat.NoConversion
                            Struct.Data.raw	= fread(fid, [double(Struct.Data.Params.nbOfChannels), double(Struct.Data.Params.nbOfSamples)], PrecStr);
                        case GazeEEG_LoadMat.Int16Conversion
                            Struct.Data.raw	= int16(fread(fid, [double(Struct.Data.Params.nbOfChannels), double(Struct.Data.Params.nbOfSamples)], PrecStr));
                        case GazeEEG_LoadMat.SingleConversion
                            Struct.Data.raw	= single(fread(fid, [double(Struct.Data.Params.nbOfChannels), double(Struct.Data.Params.nbOfSamples)], PrecStr));
                        case GazeEEG_LoadMat.DoubleConversion
                            Struct.Data.raw	= double(fread(fid, [double(Struct.Data.Params.nbOfChannels), double(Struct.Data.Params.nbOfSamples)], PrecStr));
                    end
                    fclose(fid);
                else
                    switch(convertType)
                        case GazeEEG_LoadMat.Int16Conversion
                            Struct.Data.raw	= int16(single(Struct.Data.raw));
                        case GazeEEG_LoadMat.SingleConversion
                            Struct.Data.raw	= single(Struct.Data.raw);
                        case GazeEEG_LoadMat.DoubleConversion
                            Struct.Data.raw	= double(Struct.Data.raw);
                    end
                end
                if(replaceNaN)
                    Struct.Data.raw(Struct.Data.raw(:, :) == Struct.Data.Params.valNaN)	= NaN;
                end
            else
                Struct.Data.raw = dataFileName;
            end

            
            % build returned structure
 			if(isBrainamp)
                global Brainamp;
                Brainamp = Struct;
%                 GazeEEG_manageEvents('Brainamp');
            else
                global Eyelink;
                Eyelink = Struct;
                % Convert triggers to events, if Trigger events already exist they will be
                % deleted and replaced by the current function
%                 GazeEEG_manageEvents('Eyelink');
			end
          
			ret = true;
        end
        
        function [] = throwError( varargin)
            if nargin == 1
                type = '';
            else
                if varargin{1}
                    type = 'Brainamp';
                else
                    type = 'Eyelink';
                end
            end
            error('GazeEEG:LoadMat','%s data from %s has not been loaded correctly. Please, check path.', type, varargin{end});
        end
	end
end

